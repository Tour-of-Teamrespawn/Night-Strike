/*%FSM<COMPILE "scriptedFSM.cfg, helicopter">*/
/*%FSM<HEAD>*/
/*
item0[] = {"land",4,218,157.498459,340.224304,247.498459,390.224304,0.000000,"land"};
item1[] = {"react",0,250,-39.125454,36.278599,50.874546,86.278595,0.000000,"react"};
item2[] = {"killed",4,218,-176.596497,35.791580,-86.596497,85.791595,50.000000,"killed"};
item3[] = {"end1",1,250,-304.600708,35.791573,-214.600662,85.791565,0.000000,"end1"};
item4[] = {"new_task",4,218,-39.236374,128.021286,50.763626,178.021286,10.000000,"new task"};
item5[] = {"",7,210,-134.446793,239.584732,-126.446762,247.584732,0.000000,""};
item6[] = {"_",2,250,-39.236374,218.464615,50.763641,268.464600,0.000000,""};
item7[] = {"pickup",4,218,-39.216942,338.223633,50.783054,388.223633,0.000000,"pickup"};
item8[] = {"__1",2,250,154.197342,440.107361,244.197342,490.107361,0.000000,""};
item9[] = {"circle",4,218,349.951843,342.826050,439.951782,392.826050,0.000000,"circle"};
item10[] = {"",7,210,-134.421814,149.088745,-126.421806,157.088745,0.000000,""};
item11[] = {"__2",2,250,-38.172050,622.377319,51.827961,672.377319,0.000000,""};
item12[] = {"ready_for_smoke",4,218,-34.948715,720.291138,55.051289,770.291138,0.000000,"ready for" \n "smoke"};
item13[] = {"__3",2,250,-35.005585,828.257324,54.994446,878.257141,0.000000,""};
item14[] = {"",7,210,-134.421387,455.318359,-126.421387,463.318359,0.000000,""};
item15[] = {"",7,210,-133.519745,850.088562,-125.519760,858.088562,0.000000,""};
item16[] = {"smoke_found_",4,218,-42.844559,926.309937,47.155430,976.309570,1.000000,"smoke found?"};
item17[] = {"rtb",4,218,747.030334,342.367523,837.030273,392.367523,0.000000,"rtb"};
item18[] = {"__4",2,250,-42.067879,1024.368530,47.932129,1074.368652,0.000000,""};
item19[] = {"",7,210,-129.826035,1044.389404,-121.826027,1052.389404,0.000000,""};
item20[] = {"smoke_position",4,218,-42.553459,1119.069824,47.446529,1169.069824,0.000000,"smoke" \n "position"};
item21[] = {"__5",2,250,-42.413727,1207.332031,47.586315,1257.331787,0.000000,""};
item22[] = {"smoke_confirmed",4,218,-42.370209,1290.136963,47.629757,1340.136963,0.000000,"smoke confirmed"};
item23[] = {"circle",4,218,-57.296104,896.126343,-11.324745,919.363892,0.000000,"circle"};
item24[] = {"",7,210,-130.143127,1225.124268,-122.143158,1233.124268,0.000000,""};
item25[] = {"new_smoke",4,218,-60.686836,1436.127441,-3.917076,1469.961182,0.000000,"new" \n "smoke"};
item26[] = {"",7,210,-62.647278,865.197083,-54.647278,873.197083,0.000000,""};
item27[] = {"__6",2,250,-42.734512,1370.296875,47.265491,1420.296875,0.000000,""};
item28[] = {"land",4,218,6.507317,1436.595947,63.277077,1470.429688,1.000000,"land"};
item29[] = {"__7",2,250,6.322166,1500.930664,63.675247,1522.469238,0.000000,""};
item30[] = {"",7,210,-130.376907,1388.277100,-122.376892,1396.277100,0.000000,""};
item31[] = {"",7,210,-62.993317,1460.734863,-54.993317,1468.734863,0.000000,""};
item32[] = {"",7,210,-130.210297,1505.397461,-122.210297,1513.397461,0.000000,""};
item33[] = {"__8",2,250,750.684570,625.588318,840.684631,675.588196,0.000000,""};
item34[] = {"at_base",4,218,748.530945,724.588989,838.531006,774.588989,0.000000,"at base"};
item35[] = {"__9",2,250,747.906799,826.769775,837.906738,876.769775,0.000000,""};
item36[] = {"__10",2,250,153.624100,620.135498,243.624100,670.135864,0.000000,""};
item37[] = {"at_landing_posit",4,218,152.919968,722.880005,242.919998,772.880005,0.000000,"at landing" \n "position"};
item38[] = {"__11",2,250,150.722916,832.572876,240.722946,882.572876,0.000000,""};
item39[] = {"at_position",4,218,156.252029,529.595093,246.251785,579.595215,0.000000,"at position"};
item40[] = {"new_position_",4,218,250.619949,528.794067,340.619873,578.794189,0.000000,"new position?"};
item41[] = {"__12",2,250,346.084229,830.519531,436.084229,880.519531,0.000000,""};
item42[] = {"circle_around",4,218,346.700378,924.043091,436.700378,974.043091,0.000000,"circle around"};
item43[] = {"SAD",4,218,548.683655,346.087982,638.683655,396.087982,0.000000,"SAD"};
item44[] = {"__13",2,250,550.297241,829.359619,640.297241,879.359619,0.000000,""};
item45[] = {"circle",4,218,546.335510,919.932861,636.335510,969.932861,0.000000,"circle"};
item46[] = {"Service",4,218,747.804749,921.492432,837.804749,971.492554,10.000000,"Service"};
item47[] = {"move_",4,218,945.823059,341.077698,1035.822998,391.077698,0.000000,"move "};
item48[] = {"__14",2,250,945.411194,434.384216,1035.411133,484.384216,0.000000,""};
item49[] = {"at_position",4,218,947.465881,523.871948,1037.465576,573.871948,0.000000,"at position"};
item50[] = {"at_final_positio",4,218,953.490784,722.170654,1043.490723,772.170654,0.000000,"at final" \n "position"};
item51[] = {"new_position_",4,218,1041.833740,523.070923,1131.833496,573.070923,0.000000,"new position?"};
item52[] = {"__15",2,250,949.843323,827.822632,1039.843262,877.822632,0.000000,""};
item53[] = {"__16",2,250,950.032043,623.875854,1040.031982,673.875854,0.000000,""};
item54[] = {"",7,210,-136.041443,639.351685,-128.041428,647.351685,0.000000,""};
item55[] = {"__17",2,250,750.896545,433.400360,840.896545,483.400360,0.000000,""};
item56[] = {"at_position",4,218,750.689270,522.888184,840.689148,572.888306,0.000000,"at position"};
item57[] = {"new_position_",4,218,845.810120,522.317383,935.809875,572.317505,0.000000,"new position?"};
item58[] = {"__18",2,250,549.468628,436.876556,639.468628,486.876556,0.000000,""};
item59[] = {"at_position",4,218,552.654419,524.102417,642.654297,574.102539,0.000000,"at position"};
item60[] = {"new_position_",4,218,647.775269,523.531616,737.775330,573.531738,0.000000,"new position?"};
item61[] = {"__19",2,250,551.069214,623.897766,641.069275,673.897644,0.000000,""};
item62[] = {"at_final_positio",4,218,550.356201,717.313599,640.356201,767.313599,0.000000,"at final" \n "position"};
item63[] = {"__20",2,250,350.246704,435.995331,440.246704,485.995331,0.000000,""};
item64[] = {"at_position",4,218,352.301392,527.745239,442.301270,577.745361,0.000000,"at position"};
item65[] = {"new_position_",4,218,447.422241,527.174438,537.422302,577.174561,0.000000,"new position?"};
item66[] = {"__21",2,250,352.407104,619.087158,442.407166,669.087036,0.000000,""};
item67[] = {"at_final_positio",4,218,350.003174,720.956421,440.003174,770.956421,0.000000,"at final" \n "position"};
item68[] = {"__22",2,250,-44.034073,438.876099,45.965927,488.876099,0.000000,""};
item69[] = {"at_position",4,218,-41.979385,528.363892,48.020370,578.364014,0.000000,"at position"};
item70[] = {"new_position_",4,218,52.388535,527.562866,142.388412,577.562988,0.000000,"new position?"};
item71[] = {"engine",4,4314,1136.889893,341.077698,1226.889893,391.077698,0.000000,"engine"};
item72[] = {"__23",2,250,1145.419556,827.013855,1235.419556,877.013855,0.000000,""};
link0[] = {0,8};
link1[] = {1,2};
link2[] = {1,4};
link3[] = {2,3};
link4[] = {4,6};
link5[] = {5,10};
link6[] = {6,0};
link7[] = {6,5};
link8[] = {6,7};
link9[] = {6,9};
link10[] = {6,17};
link11[] = {6,43};
link12[] = {6,47};
link13[] = {6,71};
link14[] = {7,68};
link15[] = {8,39};
link16[] = {9,63};
link17[] = {10,2};
link18[] = {10,4};
link19[] = {11,12};
link20[] = {11,54};
link21[] = {11,54};
link22[] = {11,70};
link23[] = {12,13};
link24[] = {13,15};
link25[] = {13,16};
link26[] = {13,23};
link27[] = {14,5};
link28[] = {15,54};
link29[] = {16,18};
link30[] = {17,55};
link31[] = {18,19};
link32[] = {18,20};
link33[] = {19,15};
link34[] = {20,21};
link35[] = {21,22};
link36[] = {21,24};
link37[] = {22,27};
link38[] = {23,13};
link39[] = {24,19};
link40[] = {25,31};
link41[] = {26,13};
link42[] = {27,25};
link43[] = {27,28};
link44[] = {27,30};
link45[] = {28,29};
link46[] = {29,32};
link47[] = {30,24};
link48[] = {31,26};
link49[] = {32,30};
link50[] = {33,34};
link51[] = {33,54};
link52[] = {33,57};
link53[] = {34,35};
link54[] = {35,15};
link55[] = {35,46};
link56[] = {36,37};
link57[] = {36,40};
link58[] = {36,54};
link59[] = {36,54};
link60[] = {37,38};
link61[] = {38,15};
link62[] = {38,15};
link63[] = {39,36};
link64[] = {40,8};
link65[] = {41,15};
link66[] = {41,42};
link67[] = {42,41};
link68[] = {43,58};
link69[] = {44,15};
link70[] = {44,45};
link71[] = {45,44};
link72[] = {46,35};
link73[] = {47,48};
link74[] = {48,14};
link75[] = {48,49};
link76[] = {49,53};
link77[] = {50,52};
link78[] = {51,48};
link79[] = {52,15};
link80[] = {53,50};
link81[] = {53,51};
link82[] = {53,54};
link83[] = {54,14};
link84[] = {55,14};
link85[] = {55,56};
link86[] = {56,33};
link87[] = {57,55};
link88[] = {58,14};
link89[] = {58,59};
link90[] = {59,61};
link91[] = {60,58};
link92[] = {61,54};
link93[] = {61,60};
link94[] = {61,62};
link95[] = {62,44};
link96[] = {63,14};
link97[] = {63,64};
link98[] = {64,66};
link99[] = {65,63};
link100[] = {66,54};
link101[] = {66,65};
link102[] = {66,67};
link103[] = {67,41};
link104[] = {68,14};
link105[] = {68,69};
link106[] = {69,11};
link107[] = {70,68};
link108[] = {71,72};
link109[] = {72,15};
globals[] = {0.000000,0,0,0,0,640,480,1,1,6316128,1,339.161407,1681.060791,1148.323975,-31.367668,637,560,1};
window[] = {0,-1,-1,-32000,-32000,804,207,1467,72,1,655};
*//*%FSM</HEAD>*/
class FSM
{
        fsmName = "helicopter";
        class States
        {
                /*%FSM<STATE "react">*/
                class react
                {
                        name = "react";
                        itemno = 1;
                        init = /*%FSM<STATEINIT""">*/"private " \n
                         "[" \n
                         "	""_chopper"", ""_grp"", ""_callsign"", ""_base"", ""_h"", ""_task"", ""_pos"", ""_posLand""," \n
                         "	""_timeOut"", ""_delay"", ""_smoke"", ""_smokeColour"", ""_posSmoke"",	""_goodToLand"", " \n
                         "	""_dirCircle"", ""_radiusCircle"", ""_speechSaid"", ""_speechSaidSmoke"", ""_heliHs""," \n
                         "	""_height"", ""_speed"", ""_behaviour"", ""_smokes"", ""_time"", ""_positions"", ""_posTally""," \n
                         "	""_posMax"", ""_changeDist"", ""_oldPos"", ""_lDist"", ""_nDist"", ""_fDist""" \n
                         "];" \n
                         "_chopper = _this select 0;" \n
                         "_grp = _this select 1;" \n
                         "_callsign = _this select 2;" \n
                         "_base = _this select 3;" \n
                         "_h = createVehicle [""Land_HelipadEmpty_F"", _base, [], 0, ""CAN_COLLIDE""];" \n
                         "_task = ""idle"";" \n
                         "_height = 100;" \n
                         "_speed = 20;" \n
                         "_behaviour = ""blue"";" \n
                         "_pos = [];" \n
                         "_posLand = [];" \n
                         "_timeOut = 0;" \n
                         "_delay = 0;" \n
                         "_smoke = objNull;" \n
                         "_smokeColor = """";" \n
                         "_posSmoke = [];" \n
                         "_posCircle = [];" \n
                         "_goodToLand = false;" \n
                         "_dirCircle = 0;" \n
                         "_radiusCircle = 0;" \n
                         "_speechSaid = false;" \n
                         "_speechSaidSmoke = false;" \n
                         "_heliHs = objNull;" \n
                         "_time = time;" \n
                         "_positions = [];" \n
                         "_changeDist = 0;" \n
                         "_oldPos = [];" \n
                         "_lDist = 100;" \n
                         "_nDist = 175;" \n
                         "_fDist = 250;" \n
                         "" \n
                         "//Behaviour" \n
                         "_grp setBehaviour ""CARELESS"";" \n
                         "_grp setCombatMode ""BLUE"";" \n
                         "_grp enableAttack false;" \n
                         "" \n
                         "//Optimization" \n
                         "{" \n
                         "	_x disableAi ""FSM"";" \n
                         "	_x disableAi ""TARGET"";" \n
                         "	_x disableAi ""AUTOTARGET"";" \n
                         "	_x setSkill 1;" \n
                         "} forEach units _grp;" \n
                         "" \n
                         "//Vehicle Status" \n
                         "_chopper setVariable [""TOUR_SI_unitStatus"", ""idle"", true];" \n
                         "_chopper lockDriver true;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "end1">*/
                class end1
                {
                        name = "end1";
                        itemno = 3;
                        init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "_">*/
                class _
                {
                        name = "_";
                        itemno = 6;
                        init = /*%FSM<STATEINIT""">*/"_chopper land ""NONE"";" \n
                         "_speechSaid = false;" \n
                         "_speechSaidSmoke = false;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "rtb">*/
                                class rtb
                                {
                                        itemno = 17;
                                        priority = 0.000000;
                                        to="__17";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_task == ""return to base""" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""TOUR_SI_unitStatus"", ""return to base"", true];" \n
                                         "" \n
                                         "_chopper spawn" \n
                                         "{" \n
                                         "	sleep 5;" \n
                                         "	if (isNil {_this getVariable ""TOUR_SI_vehicleChat""}) then" \n
                                         "	{" \n
                                         "		[" \n
                                         "			_this," \n
                                         "			""Copy that, we are RTB. OUT""," \n
                                         "			""side""" \n
                                         "		] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "	}else" \n
                                         "	{" \n
                                         "		[" \n
                                         "			_this," \n
                                         "			""Sure thing, buggin out now. We are RTB!""," \n
                                         "			""vehicle""" \n
                                         "		] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "		_this setVariable [""TOUR_SI_vehicleChat"", nil, true];" \n
                                         "	};" \n
                                         "};" \n
                                         "" \n
                                         "//if it is fire at will, they will only fire if they are the gunners, so the pilot will maintain the route" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;	" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "land">*/
                                class land
                                {
                                        itemno = 0;
                                        priority = 0.000000;
                                        to="__1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_task == ""land""" \n
                                         "||" \n
                                         "_task == ""land (engine off)""" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""TOUR_SI_unitStatus"", ""Land"", true];" \n
                                         "" \n
                                         "_chopper spawn" \n
                                         "{" \n
                                         "	sleep 5;" \n
                                         "	" \n
                                         "	[" \n
                                         "		_this," \n
                                         "		""Copy that, landing at designated coordinates. OUT""," \n
                                         "		""side""" \n
                                         "	] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "};" \n
                                         "" \n
                                         "//if it is fire at will, they will only fire if they are the gunners, so the pilot will maintain the route" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;	" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "move_">*/
                                class move_
                                {
                                        itemno = 47;
                                        priority = 0.000000;
                                        to="__14";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_task == ""move to"")" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""TOUR_SI_unitStatus"", ""move to"", true];" \n
                                         "_chopper spawn" \n
                                         "{" \n
                                         "	sleep 5;" \n
                                         "	" \n
                                         "	[" \n
                                         "		_this," \n
                                         "		""Copy that, we are moving to location. OUT""," \n
                                         "		""side""" \n
                                         "	] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "};" \n
                                         "" \n
                                         "//if it is fire at will, they will only fire if they are the gunners, so the pilot will maintain the route" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;	" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "engine">*/
                                class engine
                                {
                                        itemno = 71;
                                        priority = 0.000000;
                                        to="__23";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_task == ""toggle engine"")" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""TOUR_SI_unitStatus"", ""toggle engine"", true];" \n
                                         "" \n
                                         "if (isEngineOn _chopper) then " \n
                                         "{" \n
                                         "	_chopper spawn" \n
                                         "	{" \n
                                         "		sleep 5;" \n
                                         "	" \n
                                         "		[" \n
                                         "			_this," \n
                                         "			""Copy that, engines off. OVER""," \n
                                         "			""side""" \n
                                         "		] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "		_this engineOn false;" \n
                                         "	};" \n
                                         "}else" \n
                                         "{" \n
                                         "	_chopper spawn" \n
                                         "	{" \n
                                         "		sleep 5;" \n
                                         "	" \n
                                         "		[" \n
                                         "			_this," \n
                                         "			""Copy that, engines on. OVER""," \n
                                         "			""side""" \n
                                         "		] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "		_this engineOn true;" \n
                                         "	};" \n
                                         "};" \n
                                         "" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "circle">*/
                                class circle
                                {
                                        itemno = 9;
                                        priority = 0.000000;
                                        to="__20";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_task == ""circle"")"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"//New Status" \n
                                         "_chopper setVariable [""TOUR_SI_unitStatus"", ""circle"", true];" \n
                                         "" \n
                                         "//Dialog from pilot" \n
                                         "_chopper spawn" \n
                                         "{" \n
                                         "	sleep 5;" \n
                                         "	" \n
                                         "	[" \n
                                         "		_this," \n
                                         "		""Copy that, we are inbound to provide overwatch. OUT""," \n
                                         "		""side""" \n
                                         "	] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "};" \n
                                         "" \n
                                         "//if it is fire at will, they will only fire if they are the gunners, so the pilot will maintain the route" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;	" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;									" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "pickup">*/
                                class pickup
                                {
                                        itemno = 7;
                                        priority = 0.000000;
                                        to="__22";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_task == ""PICKUP""" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""TOUR_SI_unitStatus"", ""pickup"", true];" \n
                                         "_chopper spawn" \n
                                         "{" \n
                                         "	sleep 5;" \n
                                         "		" \n
                                         "	[" \n
                                         "		_this," \n
                                         "		""Copy that, we are moving to location to pickup you up. Out.""," \n
                                         "		""side""" \n
                                         "	] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "};" \n
                                         "" \n
                                         "" \n
                                         "//if it is fire at will, they will only fire if they are the gunners, so the pilot will maintain the route" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;	" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;									" \n
                                         "								};" \n
                                         "};" \n
                                         "" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "SAD">*/
                                class SAD
                                {
                                        itemno = 43;
                                        priority = 0.000000;
                                        to="__18";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_task == ""cas"") or (_task == ""cas (laser designation)"")"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""TOUR_SI_unitStatus"", _task, true];" \n
                                         "" \n
                                         "_grp setBehaviour ""CARELESS"";" \n
                                         "_grp setCombatMode ""BLUE"";" \n
                                         "_grp setSpeedMode ""FULL"";" \n
                                         "_grp enableAttack false;" \n
                                         "{	" \n
                                         "	_x disableAi ""FSM"";" \n
                                         "	_x disableAi ""TARGET"";" \n
                                         "	_x disableAi ""AUTOTARGET"";" \n
                                         "	_x setSkill 1;" \n
                                         "} forEach units _grp;" \n
                                         "" \n
                                         "[_chopper, _task] spawn" \n
                                         "{" \n
                                         "	_chopper = _this select 0;" \n
                                         "	_task = _this select 1;" \n
                                         "	sleep 5;" \n
                                         "	" \n
                                         "	if !(_task == ""cas (laser designation)"") then" \n
                                         "	{" \n
                                         "		[" \n
                                         "			_chopper," \n
                                         "			""Copy that, moving to location to provide CAS. OUT""," \n
                                         "			""side""" \n
                                         "		] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "	}else" \n
                                         "	{" \n
                                         "		[" \n
                                         "			_chopper," \n
                                         "			""Copy that, moving to location to provide CAS - Paint your target! OUT""," \n
                                         "			""side""" \n
                                         "		] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "	};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__1">*/
                class __1
                {
                        name = "__1";
                        itemno = 8;
                        init = /*%FSM<STATEINIT""">*/"_chopper flyInHeightASL [_height, _height, _height];" \n
                         "_chopper flyInHeight _height;" \n
                         "_oldPos = _pos;" \n
                         "_pos = (_positions select _posTally);" \n
                         "" \n
                         "_distance = switch (toLower (speedmode _chopper)) do" \n
                         "{" \n
                         "	case ""limited"": {_lDist};" \n
                         "	case ""normal"": {_nDist};" \n
                         "	case ""full"": {_fDist};" \n
                         "	detault: {0};" \n
                         "};" \n
                         "" \n
                         "while {_distance > (_oldPos distance _pos)} do" \n
                         "{" \n
                         "	_distance = _distance / 2;" \n
                         "};" \n
                         "" \n
                         "if (_posTally > _posMax) then" \n
                         "{" \n
                         "	_posAdv = (_oldPos getPos [((_oldPos distance _pos) + _distance), (_oldPos getDir _pos)]);" \n
                         "	_chopper doMove _posAdv;" \n
                         "}else" \n
                         "{" \n
                         "	_chopper doMove _pos;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "at_position">*/
                                class at_position
                                {
                                        itemno = 39;
                                        priority = 0.000000;
                                        to="__10";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(unitReady _chopper) or ((_chopper distance _pos) < (_distance / 1.5))" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__2">*/
                class __2
                {
                        name = "__2";
                        itemno = 11;
                        init = /*%FSM<STATEINIT""">*/"if (_posTally <= _posMax) then" \n
                         "{" \n
                         "	_posTally = _posTally + 1;	" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_position_">*/
                                class new_position_
                                {
                                        itemno = 70;
                                        priority = 0.000000;
                                        to="__22";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally <= _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[" \n
                                         "	_chopper," \n
                                         "	format [""Waypoint %1 reached. OUT"", _posTally]," \n
                                         "	""side""" \n
                                         "] call TOUR_SI_fnc_broadcastmessage;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "ready_for_smoke">*/
                                class ready_for_smoke
                                {
                                        itemno = 12;
                                        priority = 0.000000;
                                        to="__3";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally > _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""TOUR_SI_unitStatus"", ""smoke"", true];" \n
                                         "" \n
                                         "[" \n
                                         "	_chopper," \n
                                         "	""We have arrived at pickup point, pop a smoke to confirm landing position. OVER""," \n
                                         "	""side""" \n
                                         "] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "" \n
                                         "//Hint " \n
                                         "{" \n
                                         "	if ((alive _x) && (isPlayer _x) && (_x == (leader group _x)) && ((side _x) == (side (driver _chopper)))) then" \n
                                         "	{" \n
                                         "		[ [_chopper, _callsign ]," \n
                                         "			{" \n
                                         "				_chopper = _this select 0;" \n
                                         "				_callsign = _this select 1;" \n
                                         "				if (!isDedicated) then" \n
                                         "				{" \n
                                         "					if ((_chopper distance (vehicle player)) < 250) then" \n
                                         "					{" \n
                                         "						[""hint"", (format [""%1 Is waiting for visual on friendly smoke shell at the pickup position"", _callsign ])] call TOUR_SI_fnc_Hint;" \n
                                         "					};" \n
                                         "				};" \n
                                         "			}" \n
                                         "		] remoteExec [""BIS_fnc_spawn"", 0, true]; " \n
                                         "	};" \n
                                         "} forEach playableUnits + switchableUnits;" \n
                                         "" \n
                                         "[_chopper, _callsign ] spawn" \n
                                         "{" \n
                                         "	private [""_chopper"", ""_callsign""];" \n
                                         "	_chopper = _this select 0;" \n
                                         "	_callsign = _this select 1;" \n
                                         "	" \n
                                         "	sleep 75;" \n
                                         "	" \n
                                         "	while { (_chopper getVariable ""TOUR_SI_unitStatus"") == ""smoke"" } do" \n
                                         "	{" \n
                                         "		[" \n
                                         "			_chopper," \n
                                         "			""Still waiting for that smoke shell. OVER""," \n
                                         "			""side""" \n
                                         "		] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "		" \n
                                         "		//Hint" \n
                                         "		{" \n
                                         "			if ((alive _x) && (isPlayer _x) && (_x == (leader group _x)) && ((side _x) == (side (driver _chopper)))) then" \n
                                         "			{" \n
                                         "				[ [_chopper, _callsign ]," \n
                                         "					{" \n
                                         "						_chopper = _this select 0;" \n
                                         "						_callsign = _this select 1;" \n
                                         "						if (!isDedicated) then" \n
                                         "						{" \n
                                         "							if ((_chopper distance (vehicle player)) < 250) then" \n
                                         "							{" \n
                                         "								[""hint"", (format [""%1 Is waiting for visual on friendly smoke shell at the pickup position"", _callsign ])] call TOUR_SI_fnc_Hint;" \n
                                         "							};" \n
                                         "						};" \n
                                         "					} " \n
                                         "				] remoteExec [""BIS_fnc_spawn"", 0, true]; " \n
                                         "			};" \n
                                         "		} forEach playableUnits + switchableUnits;" \n
                                         "		" \n
                                         "		sleep 75;" \n
                                         "	};" \n
                                         "};" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__3">*/
                class __3
                {
                        name = "__3";
                        itemno = 13;
                        init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "smoke_found_">*/
                                class smoke_found_
                                {
                                        itemno = 16;
                                        priority = 1.000000;
                                        to="__4";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"{ (_x isKindOf ""SmokeShell"") && (getPosATL _x select 2 < 0.2) } count (nearestObjects [_pos, [], 250]) > 0" \n
                                         "&&" \n
                                         "unitReady _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_smokes = nearestObjects [_pos, [], 250];" \n
                                         "{" \n
                                         "	if (_x isKindOf ""SmokeShell"") exitWith {_smoke = _x};" \n
                                         "}forEach _smokes;" \n
                                         "_chopper doMove getPosATL _smoke;" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "circle">*/
                                class circle
                                {
                                        itemno = 23;
                                        priority = 0.000000;
                                        to="__3";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"unitReady _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_posCircle = [_pos, _radiusCircle, _dirCircle] call BIS_fnc_relPos;" \n
                                         "_dirCircle = _dirCircle + 45;" \n
                                         "" \n
                                         "_chopper flyInHeightASL [50, 50, 50];" \n
                                         "_chopper flyInHeight 50;" \n
                                         "_chopper setSpeedMode ""LIMITED"";" \n
                                         "_chopper doMove _posCircle;" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__4">*/
                class __4
                {
                        name = "__4";
                        itemno = 18;
                        init = /*%FSM<STATEINIT""">*/"_delay = time + 7.5;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "smoke_position">*/
                                class smoke_position
                                {
                                        itemno = 20;
                                        priority = 0.000000;
                                        to="__5";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"time > _delay" \n
                                         "&&" \n
                                         "unitReady _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"//Store smoke position" \n
                                         "_posSmoke = getPosATL _smoke;" \n
                                         "_posSmoke set [2, 0];" \n
                                         "" \n
                                         "//Smoke color" \n
                                         "_smokeColour = _smoke call TOUR_SI_fnc_smokeColour;" \n
                                         "" \n
                                         "//Move Chopper H to land position" \n
                                         "_h setPosATL _posSmoke;" \n
                                         "" \n
                                         "//New Status" \n
                                         "_chopper setVariable [""TOUR_SI_unitStatus"", ""smokeconf"", true];" \n
                                         "_chopper setVariable [""TOUR_SI_smokeColour"", _smokeColour, true];"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__5">*/
                class __5
                {
                        name = "__5";
                        itemno = 21;
                        init = /*%FSM<STATEINIT""">*/"//We see smoke" \n
                         "[" \n
                         "	_chopper," \n
                         "	format [""We see %1 smoke, do you confirm? OVER"", _smokeColour]," \n
                         "	""side""" \n
                         "] call TOUR_SI_fnc_broadcastmessage;" \n
                         "" \n
                         "//Hint" \n
                         "{" \n
                         "	if ((alive _x) && (isPlayer _x) && (_x == (leader group _x)) && ((side _x) == (side (driver _chopper)))) then" \n
                         "	{" \n
                         "			[ [_chopper, _callsign]," \n
                         "				{" \n
                         "					_chopper = _this select 0;" \n
                         "					_callsign = _this select 1;" \n
                         "					sleep 4;" \n
                         "					if (!isDedicated) then" \n
                         "					{" \n
                         "						if ((_chopper distance (vehicle player)) < 250) then" \n
                         "						{" \n
                         "							[""hint"", (format [""%1 Is waiting for smoke confirmation - use the support interface to communicate with the helicopter"", _callsign ])] call TOUR_SI_fnc_Hint;" \n
                         "						};" \n
                         "					};" \n
                         "				}" \n
                         "			] remoteExec [""BIS_fnc_spawn"", 0, false];" \n
                         "	};" \n
                         "} forEach playableUnits + switchableUnits;		" \n
                         "" \n
                         "[_chopper, _callsign, _smokeColour ] spawn" \n
                         "{" \n
                         "	private [""_chopper"", ""_callsign"", ""_smokeColour""];" \n
                         "	_chopper = _this select 0;" \n
                         "	_callsign = _this select 1;" \n
                         "	_smokeColour = _this select 2;" \n
                         "	" \n
                         "	sleep 75;" \n
                         "	" \n
                         "	while { (_chopper getVariable ""TOUR_SI_unitStatus"") == ""smokeconf"" } do" \n
                         "	{" \n
                         "		[" \n
                         "			_chopper," \n
                         "			format [""Please respond, is that %1 smoke yours? Over."", _smokeColour]," \n
                         "			""side""" \n
                         "		] call TOUR_SI_fnc_broadcastmessage;" \n
                         "		" \n
                         "		//Hint" \n
                         "		{" \n
                         "			if ((alive _x) && (isPlayer _x) && (_x == (leader group _x)) && ((side _x) == (side (driver _chopper)))) then" \n
                         "			{" \n
                         "				[ [_chopper, _callsign]," \n
                         "					{" \n
                         "						_chopper = _this select 0;" \n
                         "						_callsign = _this select 1;" \n
                         "						if (!isDedicated) then" \n
                         "						{" \n
                         "							if ((_chopper distance (vehicle player)) < 250) then" \n
                         "							{" \n
                         "								[""hint"", (format [""%1 Is waiting for smoke confirmation - use the support interface to communicate with the helicopter"", _callsign ])] call TOUR_SI_fnc_Hint;" \n
                         "							};" \n
                         "						};" \n
                         "					}" \n
                         "				] remoteExec [""BIS_fnc_spawn"", 0, false]; " \n
                         "			};" \n
                         "		} forEach playableUnits + switchableUnits;	" \n
                         "		" \n
                         "		sleep 75;" \n
                         "	};" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "smoke_confirmed">*/
                                class smoke_confirmed
                                {
                                        itemno = 22;
                                        priority = 0.000000;
                                        to="__6";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_smokeConfirmed"" }" \n
                                         "&&" \n
                                         "unitReady _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_goodToLand = _chopper getVariable ""TOUR_SI_smokeConfirmed"";" \n
                                         "_chopper setVariable [""TOUR_SI_smokeConfirmed"", nil, true];" \n
                                         "_chopper setVariable [""TOUR_SI_smokeColour"", nil, true];"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__6">*/
                class __6
                {
                        name = "__6";
                        itemno = 27;
                        init = /*%FSM<STATEINIT""">*/"if (_task != ""return to base"") then" \n
                         "{" \n
                         "	[_chopper, _goodToLand] spawn" \n
                         "	{" \n
                         "		sleep 4;" \n
                         "		" \n
                         "		private [""_chopper"", ""_goodToLand""];" \n
                         "		_chopper = _this select 0;" \n
                         "		_goodToLand = _this select 1;" \n
                         "		" \n
                         "		if (!_goodToLand) then" \n
                         "		{" \n
                         "			[" \n
                         "				_chopper," \n
                         "				""Copy that, pop another smoke to mark LZ. OUT""," \n
                         "				""side""" \n
                         "			] call TOUR_SI_fnc_broadcastmessage;" \n
                         "		}" \n
                         "		else" \n
                         "		{" \n
                         "			[" \n
                         "				_chopper," \n
                         "				""Copy that, secure LZ. Out.""," \n
                         "				""side""" \n
                         "			] call TOUR_SI_fnc_broadcastmessage;" \n
                         "		};" \n
                         "	};" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "land">*/
                                class land
                                {
                                        itemno = 28;
                                        priority = 1.000000;
                                        to="__7";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_goodToLand" \n
                                         "&&" \n
                                         "unitReady _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"//Behaviour" \n
                                         "_grp setBehaviour ""CARELESS"";" \n
                                         "_grp setCombatMode ""BLUE"";" \n
                                         "_grp enableAttack false;" \n
                                         "" \n
                                         "//Optimization" \n
                                         "{" \n
                                         "	_x disableAi ""FSM"";" \n
                                         "	_x disableAi ""TARGET"";" \n
                                         "	_x disableAi ""AUTOTARGET"";" \n
                                         "	_x setSkill 1;" \n
                                         "} forEach units _grp;" \n
                                         "" \n
                                         "_chopper land ""Get In"";" \n
                                         "_chopper setVariable [""TOUR_SI_unitStatus"", ""CARGO"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_smoke">*/
                                class new_smoke
                                {
                                        itemno = 25;
                                        priority = 0.000000;
                                        to="__3";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"true" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"if (alive _smoke) then { deleteVehicle _smoke };" \n
                                         "_chopper setVariable [""TOUR_SI_unitStatus"", ""smoke"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__7">*/
                class __7
                {
                        name = "__7";
                        itemno = 29;
                        init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__8">*/
                class __8
                {
                        name = "__8";
                        itemno = 33;
                        init = /*%FSM<STATEINIT""">*/"if (_posTally <= _posMax) then" \n
                         "{" \n
                         "	_posTally = _posTally + 1;	" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_position_">*/
                                class new_position_
                                {
                                        itemno = 57;
                                        priority = 0.000000;
                                        to="__17";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally <= _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[" \n
                                         "	_chopper," \n
                                         "	format [""Waypoint %1 reached. OUT"", _posTally]," \n
                                         "	""side""" \n
                                         "] call TOUR_SI_fnc_broadcastmessage;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_base">*/
                                class at_base
                                {
                                        itemno = 34;
                                        priority = 0.000000;
                                        to="__9";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally > _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"//Behaviour" \n
                                         "_grp setBehaviour ""CARELESS"";" \n
                                         "_grp setCombatMode ""BLUE"";" \n
                                         "_grp enableAttack false;" \n
                                         "" \n
                                         "//Optimization" \n
                                         "{" \n
                                         "	_x disableAi ""FSM"";" \n
                                         "	_x disableAi ""TARGET"";" \n
                                         "	_x disableAi ""AUTOTARGET"";" \n
                                         "	_x setSkill 1;" \n
                                         "} forEach units _grp;" \n
                                         "" \n
                                         "_h setPosATL _base;" \n
                                         "_chopper land ""LAND"";" \n
                                         "_chopper setVariable [""TOUR_SI_unitStatus"", ""servicing"", true];" \n
                                         "" \n
                                         "{" \n
                                         "	_x disableAi ""FSM"";" \n
                                         "	_x disableAi ""TARGET"";" \n
                                         "	_x disableAi ""AUTOTARGET"";" \n
                                         "	_x setSkill 1;" \n
                                         "} forEach units _grp;" \n
                                         "" \n
                                         "[" \n
                                         "	_chopper," \n
                                         "	""We are at Base. OUT""," \n
                                         "	""side""" \n
                                         "] call TOUR_SI_fnc_broadcastmessage;" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__9">*/
                class __9
                {
                        name = "__9";
                        itemno = 35;
                        init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "Service">*/
                                class Service
                                {
                                        itemno = 46;
                                        priority = 10.000000;
                                        to="__9";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_time < time"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"if ((_chopper getVariable ""TOUR_SI_unitStatus"" == ""servicing"") && !(isEngineOn _chopper) && ((getPosATL _chopper select 2) < 5)) then" \n
                                         "{" \n
                                         "	_add = 0.01;" \n
                                         "	_damage = (damage _chopper) - _add;" \n
                                         "	_fuel = ((fuel _chopper) + _add);" \n
                                         "" \n
                                         "	if (_fuel > 1) then" \n
                                         "	{" \n
                                         "		_fuel = 1;" \n
                                         "	};" \n
                                         "	_chopper setFuel _fuel;" \n
                                         "" \n
                                         "	if (_damage < 0) then" \n
                                         "	{" \n
                                         "		_damage = 0;" \n
                                         "	};" \n
                                         "	_chopper setDamage _damage;" \n
                                         "" \n
                                         "	if ((_fuel == 1) && (damage _chopper == 0)) then" \n
                                         "	{" \n
                                         "		_chopper setVehicleAmmo 1;" \n
                                         "		[" \n
                                         "			_chopper," \n
                                         "			""Service complete, we are good to go! OUT""," \n
                                         "			""side""" \n
                                         "		] call TOUR_SI_fnc_broadcastMessage;" \n
                                         "		_chopper setVariable [""TOUR_SI_unitStatus"", ""idle"", true];" \n
                                         "	};" \n
                                         "};" \n
                                         "" \n
                                         "_time = time + 1;" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__10">*/
                class __10
                {
                        name = "__10";
                        itemno = 36;
                        init = /*%FSM<STATEINIT""">*/"if (_posTally <= _posMax) then" \n
                         "{" \n
                         "	_posTally = _posTally + 1;	" \n
                         "};" \n
                         "" \n
                         "" \n
                         "//Find position to land" \n
                         "_heliHs = nearestObjects [_pos, [""Land_HelipadCircle_F"", ""Land_HelipadCivil_F"", ""Land_HelipadEmpty_F"", ""Land_HelipadRescue_F"", ""Land_HelipadSquare_F""], 50];" \n
                         "" \n
                         "if (count _heliHs > 0) then" \n
                         "{" \n
                         "	_posLand = getPosATL (_heliHs select 0);" \n
                         "}" \n
                         "else" \n
                         "{" \n
                         "	_posLand = _pos isflatempty [sizeOf typeOf _chopper, 0, 0.5, sizeOf typeOf _chopper, 0, false, _chopper];" \n
                         "	" \n
                         "	if (count _posLand < 2) then" \n
                         "	{" \n
                         "		_heliHs = nearestObjects [_pos, [""Land_HelipadCircle_F"", ""Land_HelipadCivil_F"", ""Land_HelipadEmpty_F"", ""Land_HelipadRescue_F"", ""Land_HelipadSquare_F""], 100];" \n
                         "" \n
                         "		if (count _heliHs > 0) then" \n
                         "		{" \n
                         "			_posLand = getPosATL (_heliHs select 0);" \n
                         "		}" \n
                         "		else" \n
                         "		{" \n
                         "			private [""_dir"", ""_dist""];" \n
                         "			_dir = 0;" \n
                         "			_dist = 10;" \n
                         "			" \n
                         "			while { _dist <= 250 } do" \n
                         "			{" \n
                         "				_posLand = ([_pos, _dist, _dir] call BIS_fnc_relPos) isflatempty [sizeOf typeOf _chopper, 0, 0.5, sizeOf typeOf _chopper, 0, false, _chopper];" \n
                         "				if (count _posLand > 0) exitWith {};" \n
                         "				" \n
                         "				_dir = _dir + 1;" \n
                         "				" \n
                         "				if (_dir >= 360) then " \n
                         "				{" \n
                         "					_dir = 0;" \n
                         "					_dist = _dist + 10;" \n
                         "				};" \n
                         "			};" \n
                         "			" \n
                         "			if (count _posLand < 2) then" \n
                         "			{" \n
                         "				_posLand = _pos;" \n
                         "			};" \n
                         "		};" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "_posLand set [2, 0];" \n
                         "_h setPosATL _posLand;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_position_">*/
                                class new_position_
                                {
                                        itemno = 40;
                                        priority = 0.000000;
                                        to="__1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally <= _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[" \n
                                         "	_chopper," \n
                                         "	format [""Waypoint %1 reached. OUT"", _posTally]," \n
                                         "	""side""" \n
                                         "] call TOUR_SI_fnc_broadcastmessage;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_landing_posit">*/
                                class at_landing_posit
                                {
                                        itemno = 37;
                                        priority = 0.000000;
                                        to="__11";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally > _posMax)" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"//Behaviour" \n
                                         "_grp setBehaviour ""CARELESS"";" \n
                                         "_grp setCombatMode ""BLUE"";" \n
                                         "_grp enableAttack false;" \n
                                         "" \n
                                         "//Optimization" \n
                                         "{" \n
                                         "	_x disableAi ""FSM"";" \n
                                         "	_x disableAi ""TARGET"";" \n
                                         "	_x disableAi ""AUTOTARGET"";" \n
                                         "	_x setSkill 1;" \n
                                         "} forEach units _grp;" \n
                                         "" \n
                                         "if (_task == ""LAND"") then" \n
                                         "{" \n
                                         "	_chopper land ""GET OUT"";" \n
                                         "}" \n
                                         "else" \n
                                         "{" \n
                                         "	_chopper land ""LAND"";" \n
                                         "};" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__11">*/
                class __11
                {
                        name = "__11";
                        itemno = 38;
                        init = /*%FSM<STATEINIT""">*/"[" \n
                         "	_chopper," \n
                         "	""Landing at coordinates. OUT""," \n
                         "	""side""" \n
                         "] call TOUR_SI_fnc_broadcastmessage;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__12">*/
                class __12
                {
                        name = "__12";
                        itemno = 41;
                        init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "circle_around">*/
                                class circle_around
                                {
                                        itemno = 42;
                                        priority = 0.000000;
                                        to="__12";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"unitReady _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_dirCircle = _dirCircle + 45;" \n
                                         "_posCircle = [_pos, _radiusCircle, _dirCircle] call BIS_fnc_relPos;" \n
                                         "_chopper doMove _posCircle;" \n
                                         "" \n
                                         "" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__13">*/
                class __13
                {
                        name = "__13";
                        itemno = 44;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "if (_posTally <= _posMax) then" \n
                         "{" \n
                         "	_posTally = _posTally + 1;	" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "circle">*/
                                class circle
                                {
                                        itemno = 45;
                                        priority = 0.000000;
                                        to="__13";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_time < time"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"//Reveal Targets" \n
                                         "{" \n
                                         "	if (alive _x && side _x != side _chopper) then" \n
                                         "	{" \n
                                         "		_grp reveal _x;" \n
                                         "	};" \n
                                         "} forEach (_posCircle nearEntities [[""LaserTargetE"",""LaserTargetW"",""I_IRStrobe"",""W_IRStrobe"",""E_IRStrobe"",""Man"",""Air"",""Car"",""Motorcycle"",""Tank"", ""Wheeled_apc""], _radiusCircle]);" \n
                                         "" \n
                                         "if (unitReady _chopper) then" \n
                                         "{" \n
                                         "	_dirCircle = _dirCircle + 90;" \n
                                         "	_posCircle = [_pos, _radiusCircle, _dirCircle] call BIS_fnc_relPos;" \n
                                         "	_chopper doMove _posCircle;" \n
                                         "};" \n
                                         "" \n
                                         "if (_task == ""cas (laser designation)"") then" \n
                                         "{" \n
                                         "	if (count (_pos nearEntities [[""LaserTargetE"",""LaserTargetW"",""I_IRStrobe"",""W_IRStrobe"",""E_IRStrobe""], _radiusCircle]) > 0) then" \n
                                         "	{" \n
                                         "		{" \n
                                         "			_x enableAi ""FSM"";" \n
                                         "			_x enableAi ""TARGET"";" \n
                                         "			_x doTarget ((_pos nearEntities [[""LaserTargetE"",""LaserTargetW"",""I_IRStrobe"",""W_IRStrobe"",""E_IRStrobe""], _radiusCircle]) select 0);" \n
                                         "		}forEach units _grp;	" \n
                                         "		_grp enableAttack true;" \n
                                         "	}else" \n
                                         "	{" \n
                                         "		{" \n
                                         "			_x enableAi ""FSM"";" \n
                                         "			_x disableAi ""TARGET"";" \n
                                         "			_x disableAi ""AUTOTARGET"";" \n
                                         "		}forEach units _grp;	" \n
                                         "		_grp enableAttack true;" \n
                                         "	};" \n
                                         "};" \n
                                         "" \n
                                         "_time = time + 5;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__14">*/
                class __14
                {
                        name = "__14";
                        itemno = 48;
                        init = /*%FSM<STATEINIT""">*/"_chopper flyInHeightASL [_height, _height, _height];" \n
                         "_chopper flyInHeight _height;" \n
                         "_oldPos = _pos;" \n
                         "_pos = (_positions select _posTally);" \n
                         "" \n
                         "_distance = switch (toLower (speedmode _chopper)) do" \n
                         "{" \n
                         "	case ""limited"": {_lDist};" \n
                         "	case ""normal"": {_nDist};" \n
                         "	case ""full"": {_fDist};" \n
                         "	detault: {0};" \n
                         "};" \n
                         "" \n
                         "while {_distance > (_oldPos distance _pos)} do" \n
                         "{" \n
                         "	_distance = _distance / 2;" \n
                         "};" \n
                         "" \n
                         "_posAdv = (_oldPos getPos [((_oldPos distance _pos) + _distance), (_oldPos getDir _pos)]);" \n
                         "" \n
                         "_chopper doMove _posAdv;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_position">*/
                                class at_position
                                {
                                        itemno = 49;
                                        priority = 0.000000;
                                        to="__16";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(unitReady _chopper) or ((_chopper distance _pos) < (_distance / 1.5))" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__15">*/
                class __15
                {
                        name = "__15";
                        itemno = 52;
                        init = /*%FSM<STATEINIT""">*/"[" \n
                         "	_chopper," \n
                         "	""Holding position and waiting for further orders. OUT""," \n
                         "	""side""" \n
                         "] call TOUR_SI_fnc_broadcastmessage;"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__16">*/
                class __16
                {
                        name = "__16";
                        itemno = 53;
                        init = /*%FSM<STATEINIT""">*/"if (_posTally <= _posMax) then" \n
                         "{" \n
                         "	_posTally = _posTally + 1;	" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_position_">*/
                                class new_position_
                                {
                                        itemno = 51;
                                        priority = 0.000000;
                                        to="__14";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally <= _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[" \n
                                         "	_chopper," \n
                                         "	format [""Waypoint %1 reached. OUT"", _posTally]," \n
                                         "	""side""" \n
                                         "] call TOUR_SI_fnc_broadcastmessage;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_final_positio">*/
                                class at_final_positio
                                {
                                        itemno = 50;
                                        priority = 0.000000;
                                        to="__15";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally > _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__17">*/
                class __17
                {
                        name = "__17";
                        itemno = 55;
                        init = /*%FSM<STATEINIT""">*/"_chopper flyInHeightASL [_height, _height, _height];" \n
                         "_chopper flyInHeight _height;" \n
                         "_oldPos = _pos;" \n
                         "_pos = (_positions select _posTally);" \n
                         "" \n
                         "_distance = switch (toLower (speedmode _chopper)) do" \n
                         "{" \n
                         "	case ""limited"": {_lDist};" \n
                         "	case ""normal"": {_nDist};" \n
                         "	case ""full"": {_fDist};" \n
                         "	detault: {0};" \n
                         "};" \n
                         "" \n
                         "while {_distance > (_oldPos distance _pos)} do" \n
                         "{" \n
                         "	_distance = _distance / 2;" \n
                         "};" \n
                         "" \n
                         "_posAdv = (_oldPos getPos [((_oldPos distance _pos) + _distance), (_oldPos getDir _pos)]);" \n
                         "" \n
                         "_chopper doMove _posAdv;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_position">*/
                                class at_position
                                {
                                        itemno = 56;
                                        priority = 0.000000;
                                        to="__8";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(unitReady _chopper) or ((_chopper distance _pos) < (_distance / 1.5))" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__18">*/
                class __18
                {
                        name = "__18";
                        itemno = 58;
                        init = /*%FSM<STATEINIT""">*/"_chopper flyInHeightASL [_height, _height, _height];" \n
                         "_chopper flyInHeight _height;" \n
                         "_oldPos = _pos;" \n
                         "_pos = (_positions select _posTally);" \n
                         "" \n
                         "_distance = switch (toLower (speedmode _chopper)) do" \n
                         "{" \n
                         "	case ""limited"": {_lDist};" \n
                         "	case ""normal"": {_nDist};" \n
                         "	case ""full"": {_fDist};" \n
                         "	detault: {0};" \n
                         "};" \n
                         "" \n
                         "while {_distance > (_oldPos distance _pos)} do" \n
                         "{" \n
                         "	_distance = _distance / 2;" \n
                         "};" \n
                         "" \n
                         "if (_posTally == _posMax) then" \n
                         "{" \n
                         "	_posCircle = [_pos, _radiusCircle, _dirCircle] call BIS_fnc_relPos;" \n
                         "	_chopper doMove _posCircle;" \n
                         "}else" \n
                         "{" \n
                         "	_posAdv = (_oldPos getPos [((_oldPos distance _pos) + _distance), (_oldPos getDir _pos)]);" \n
                         "	_chopper doMove _posAdv;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_position">*/
                                class at_position
                                {
                                        itemno = 59;
                                        priority = 0.000000;
                                        to="__19";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(unitReady _chopper) or ((_chopper distance _pos) < (_distance / 1.5))" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__19">*/
                class __19
                {
                        name = "__19";
                        itemno = 61;
                        init = /*%FSM<STATEINIT""">*/"if (_posTally <= _posMax) then" \n
                         "{" \n
                         "	_posTally = _posMax + 1;	" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_final_positio">*/
                                class at_final_positio
                                {
                                        itemno = 62;
                                        priority = 0.000000;
                                        to="__13";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally > _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_grp setBehaviour ""COMBAT"";" \n
                                         "_grp setCombatMode ""RED"";" \n
                                         "_grp setSpeedMode ""FULL"";" \n
                                         "" \n
                                         "{	" \n
                                         "	if !(_task == ""cas (laser designation)"") then" \n
                                         "	{" \n
                                         "		_grp enableAttack true;" \n
                                         "		_x enableAi ""FSM"";" \n
                                         "		_x enableAi ""TARGET"";" \n
                                         "		_x enableAi ""AUTOTARGET"";" \n
                                         "	}else" \n
                                         "	{" \n
                                         "		_grp enableAttack true;" \n
                                         "		_x disableAi ""FSM"";" \n
                                         "		_x disableAi ""TARGET"";" \n
                                         "		_x disableAi ""AUTOTARGET"";" \n
                                         "	};" \n
                                         "	_x setSkill 1;" \n
                                         "} forEach units _grp;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_position_">*/
                                class new_position_
                                {
                                        itemno = 60;
                                        priority = 0.000000;
                                        to="__18";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally <= _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[" \n
                                         "	_chopper," \n
                                         "	format [""Waypoint %1 reached. OUT"", _posTally]," \n
                                         "	""side""" \n
                                         "] call TOUR_SI_fnc_broadcastmessage;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__20">*/
                class __20
                {
                        name = "__20";
                        itemno = 63;
                        init = /*%FSM<STATEINIT""">*/"_chopper flyInHeightASL [_height, _height, _height];" \n
                         "_chopper flyInHeight _height;" \n
                         "_oldPos = _pos;" \n
                         "_pos = (_positions select _posTally);" \n
                         "" \n
                         "_distance = switch (toLower (speedmode _chopper)) do" \n
                         "{" \n
                         "	case ""limited"": {_lDist};" \n
                         "	case ""normal"": {_nDist};" \n
                         "	case ""full"": {_fDist};" \n
                         "	detault: {0};" \n
                         "};" \n
                         "" \n
                         "while {_distance > (_oldPos distance _pos)} do" \n
                         "{" \n
                         "	_distance = _distance / 2;" \n
                         "};" \n
                         "" \n
                         "if (_posTally == _posMax) then" \n
                         "{" \n
                         "	_posCircle = [_pos, _radiusCircle, _dirCircle] call BIS_fnc_relPos;" \n
                         "	_chopper doMove _posCircle;" \n
                         "}else" \n
                         "{" \n
                         "	_posAdv = (_oldPos getPos [((_oldPos distance _pos) + _distance), (_oldPos getDir _pos)]);" \n
                         "	_chopper doMove _posAdv;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_position">*/
                                class at_position
                                {
                                        itemno = 64;
                                        priority = 0.000000;
                                        to="__21";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(unitReady _chopper) or ((_chopper distance _pos) < (_distance / 1.5))" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__21">*/
                class __21
                {
                        name = "__21";
                        itemno = 66;
                        init = /*%FSM<STATEINIT""">*/"if (_posTally <= _posMax) then" \n
                         "{" \n
                         "	_posTally = _posTally + 1;	" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_final_positio">*/
                                class at_final_positio
                                {
                                        itemno = 67;
                                        priority = 0.000000;
                                        to="__12";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally > _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_grp setBehaviour ""COMBAT"";" \n
                                         "_grp setCombatMode ""RED"";" \n
                                         "_grp setSpeedMode ""FULL"";" \n
                                         "" \n
                                         "{	" \n
                                         "	if !(_task == ""cas (laser designation)"") then" \n
                                         "	{" \n
                                         "		_grp enableAttack true;" \n
                                         "		_x enableAi ""FSM"";" \n
                                         "		_x enableAi ""TARGET"";" \n
                                         "		_x enableAi ""AUTOTARGET"";" \n
                                         "	}else" \n
                                         "	{" \n
                                         "		_grp enableAttack true;" \n
                                         "		_x disableAi ""FSM"";" \n
                                         "		_x disableAi ""TARGET"";" \n
                                         "		_x disableAi ""AUTOTARGET"";" \n
                                         "	};" \n
                                         "	_x setSkill 1;" \n
                                         "} forEach units _grp;" \n
                                         "" \n
                                         "[" \n
                                         "	_chopper," \n
                                         "	format [""This is %1, we are at location, circling the AO. OUT"", _callsign]," \n
                                         "	""side""" \n
                                         "] call TOUR_SI_fnc_broadcastmessage;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_position_">*/
                                class new_position_
                                {
                                        itemno = 65;
                                        priority = 0.000000;
                                        to="__20";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_posTally <= _posMax)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[" \n
                                         "	_chopper," \n
                                         "	format [""Waypoint %1 reached. OUT"", _posTally]," \n
                                         "	""side""" \n
                                         "] call TOUR_SI_fnc_broadcastmessage;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__22">*/
                class __22
                {
                        name = "__22";
                        itemno = 68;
                        init = /*%FSM<STATEINIT""">*/"_chopper flyInHeightASL [_height, _height, _height];" \n
                         "_chopper flyInHeight _height;" \n
                         "_oldPos = _pos;" \n
                         "_pos = (_positions select _posTally);" \n
                         "" \n
                         "_distance = switch (toLower (speedmode _chopper)) do" \n
                         "{" \n
                         "	case ""limited"": {_lDist};" \n
                         "	case ""normal"": {_nDist};" \n
                         "	case ""full"": {_fDist};" \n
                         "	detault: {0};" \n
                         "};" \n
                         "" \n
                         "while {_distance > (_oldPos distance _pos)} do" \n
                         "{" \n
                         "	_distance = _distance / 2;" \n
                         "};" \n
                         "" \n
                         "if (_posTally > _posMax) then" \n
                         "{" \n
                         "	_posAdv = (_oldPos getPos [((_oldPos distance _pos) + _distance), (_oldPos getDir _pos)]);" \n
                         "	_chopper doMove _posAdv;" \n
                         "}else" \n
                         "{" \n
                         "	_radiusCircle = 150;" \n
                         "	_dirCircle = [_pos, _chopper] call BIS_fnc_dirTo;" \n
                         "	_chopper flyInHeightASL [_height, _height, _height];" \n
                         "	_chopper flyInHeight _height;" \n
                         "	_chopper doMove ([_pos, _radiusCircle, _dirCircle] call BIS_fnc_relPos);" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "at_position">*/
                                class at_position
                                {
                                        itemno = 69;
                                        priority = 0.000000;
                                        to="__2";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(unitReady _chopper) or ((_chopper distance _pos) < (_distance / 1.5))" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__23">*/
                class __23
                {
                        name = "__23";
                        itemno = 72;
                        init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "killed">*/
                                class killed
                                {
                                        itemno = 2;
                                        priority = 50.000000;
                                        to="end1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!alive _chopper" \n
                                         "||" \n
                                         "!alive driver _chopper" \n
                                         "||" \n
                                         "!canMove _chopper" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_chopper setVariable [""NEO_radioTrasportUnitStatus"", ""KILLED"", true];" \n
                                         ""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "new_task">*/
                                class new_task
                                {
                                        itemno = 4;
                                        priority = 10.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isNil { _chopper getVariable ""TOUR_SI_unitOrders"" }" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_positions = _chopper getVariable ""TOUR_SI_unitOrders"" select 0;" \n
                                         "if ( count _positions == 0) then" \n
                                         "{" \n
                                         "	_positions set [0, _base];" \n
                                         "};" \n
                                         "_pos = _positions select 0;" \n
                                         "_posTally = 0;" \n
                                         "_posMax = (count _positions - 1);" \n
                                         "_task = _chopper getVariable ""TOUR_SI_unitOrders"" select 1;" \n
                                         "_height = _chopper getVariable ""TOUR_SI_unitOrders"" select 2;" \n
                                         "_radiusCircle = _chopper getVariable ""TOUR_SI_unitOrders"" select 3;" \n
                                         "_speed = _chopper getVariable ""TOUR_SI_unitOrders"" select 4;" \n
                                         "_behaviour = _chopper getVariable ""TOUR_SI_unitOrders"" select 5;" \n
                                         "_chopper setVariable [""TOUR_SI_unitOrders"", nil, true];" \n
                                         "" \n
                                         "_chopper setSpeedMode _speed;" \n
                                         "" \n
                                         "switch (toLower _behaviour) do" \n
                                         "{" \n
                                         "	case ""hold fire"": { _grp setCombatMode ""BLUE""; _grp setBehaviour ""CARELESS""; _grp enableAttack false;" \n
                                         "									{" \n
                                         "										_x disableAi ""FSM"";" \n
                                         "										_x disableAi ""TARGET"";" \n
                                         "										_x disableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "							};" \n
                                         "	case ""return fire"": { _grp setCombatMode ""WHITE""; _grp setBehaviour ""SAFE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										if ((count allTurrets _chopper) > 1) then" \n
                                         "										{" \n
                                         "											if (_x == (driver _chopper)) then" \n
                                         "											{" \n
                                         "												_x disableAi ""FSM"";" \n
                                         "												_x disableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											}else" \n
                                         "											{" \n
                                         "												_x enableAi ""FSM"";" \n
                                         "												_x enableAi ""TARGET"";" \n
                                         "												_x enableAi ""AUTOTARGET"";" \n
                                         "											};" \n
                                         "										}else" \n
                                         "										{" \n
                                         "											_x disableAi ""FSM"";" \n
                                         "											_x enableAi ""TARGET"";" \n
                                         "											_x enableAi ""AUTOTARGET"";" \n
                                         "										};" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "									" \n
                                         "								};" \n
                                         "	case ""fire at will"": { _grp setCombatMode ""YELLOW""; _grp setBehaviour ""AWARE""; _grp enableAttack true;" \n
                                         "									{" \n
                                         "										_x enableAi ""FSM"";" \n
                                         "										_x enableAi ""TARGET"";" \n
                                         "										_x enableAi ""AUTOTARGET"";" \n
                                         "										_x setSkill 1;" \n
                                         "									} forEach units _grp;" \n
                                         "								};" \n
                                         "};"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
        };
        initState="react";
        finalStates[] =
        {
                "end1",
        };
};
/*%FSM</COMPILE>*/